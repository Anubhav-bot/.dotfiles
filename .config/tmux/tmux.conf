set-option -sa terminal-overrides ",xterm*:Tc"

set -g mouse on

# prefix

# unbind C-b
# set -g prefix C-Space
# bind C-Space send-prefix

# set vi-mode
set-window-option -g mode-keys vi 

# keybinds

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

bind-key C-s command-prompt -p "New session name:" "new-session -s '%%'"
bind -n C-M-h previous-window
bind -n C-M-l next-window

bind -n C-M-k switch-client -p
bind -n C-M-j switch-client -n

bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# bind C-l send-keys 'C-l'

set -g @vim_navigator_mapping_left "C-h"
set -g @vim_navigator_mapping_right "C-l"
set -g @vim_navigator_mapping_up "C-k"
set -g @vim_navigator_mapping_down "C-j"
set -g @vim_navigator_mapping_prev "C-\\"

bind r source-file ~/.config/tmux/tmux.conf
bind i run-shell "tmux neww tmux-cht.sh"

bind k run-shell 'SESSION="#S"; tmux switch-client -n; tmux kill-session -t "$SESSION"'
bind f run-shell "tmux neww $HOME/.config/tmux/scripts/tmux-sessionizer"
bind e run-shell "$HOME/.config/tmux/scripts/tmux-sessionizer ~/Documents/erm"

# for yazi image preview
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# plugins

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
# set -g @plugin 'catppuccin/tmux'
set -g @plugin 'dreamsofcode-io/catppuccin-tmux'
set -g @plugin 'tmux-plugins/tmux-yank'

run '~/.tmux/plugins/tpm/tpm'

# if not running nvim and no multiple panes, then clear screen, otherwise navigate
bind -n C-l if-shell "[[ \$(tmux list-panes | wc -l) -gt 1 && \$(tmux display -p '#{pane_current_command}') != nvim ]]" \
  "select-pane -R" \
  "send-keys C-l"
